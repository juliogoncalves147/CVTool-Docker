{"ast":null,"code":"var _jsxFileName = \"/Users/juliogoncalves/Desktop/CVTool-Docker/CVTool-Front-End/src/components/FileDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Prism from \"prismjs\";\nimport \"prismjs/components/prism-latex\";\nimport \"prismjs/themes/prism.css\";\nimport \"./FileDisplay.css\";\nimport { getSessionId } from \"../utils/session\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DI = \"http://193.136.19.129:50761\";\nexport const LOCAL_HOST = \"http://localhost:8000\";\nfunction FileDisplay({\n  fileData,\n  fileName,\n  refreshKey\n}) {\n  _s();\n  const [fileContent, setFileContent] = useState(\"\");\n  const sessionId = getSessionId();\n  useEffect(() => {\n    const fetchFileContent = async () => {\n      try {\n        const response = await fetch(LOCAL_HOST + `/getfile/?filename=${encodeURIComponent(fileName)}`);\n        if (response.ok) {\n          const text = await response.text();\n          setFileContent(text);\n        } else {\n          console.error(\"Failed to fetch file content\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching file:\", error);\n      }\n    };\n    fetchFileContent();\n  }, [fileName, refreshKey]); // Add refreshKey to dependencies\n\n  useEffect(() => {\n    if (fileContent) {\n      Prism.highlightAll();\n    }\n  }, [fileContent]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-display\",\n    children: /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: /*#__PURE__*/_jsxDEV(\"code\", {\n        className: \"language-latex\",\n        children: fileContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(FileDisplay, \"Mii/vLcOFctNm/N2XtqeFDqywgs=\");\n_c = FileDisplay;\nexport default FileDisplay;\nvar _c;\n$RefreshReg$(_c, \"FileDisplay\");","map":{"version":3,"names":["React","useEffect","useState","Prism","getSessionId","jsxDEV","_jsxDEV","DI","LOCAL_HOST","FileDisplay","fileData","fileName","refreshKey","_s","fileContent","setFileContent","sessionId","fetchFileContent","response","fetch","encodeURIComponent","ok","text","console","error","highlightAll","className","children","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/juliogoncalves/Desktop/CVTool-Docker/CVTool-Front-End/src/components/FileDisplay.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Prism from \"prismjs\";\nimport \"prismjs/components/prism-latex\";\nimport \"prismjs/themes/prism.css\";\nimport \"./FileDisplay.css\";\nimport { getSessionId } from \"../utils/session\";\n\nexport const DI = \"http://193.136.19.129:50761\"\n\nexport const LOCAL_HOST = \"http://localhost:8000\"\n\nfunction FileDisplay({ fileData, fileName, refreshKey }) {\n  const [fileContent, setFileContent] = useState(\"\");\n\n  const sessionId = getSessionId();\n\n  useEffect(() => {\n    const fetchFileContent = async () => {\n      try {\n        const response = await fetch(\n          LOCAL_HOST + `/getfile/?filename=${encodeURIComponent(\n            fileName\n          )}`\n        );\n        if (response.ok) {\n          const text = await response.text();\n          setFileContent(text);\n        } else {\n          console.error(\"Failed to fetch file content\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching file:\", error);\n      }\n    };\n\n    fetchFileContent();\n  }, [fileName, refreshKey]); // Add refreshKey to dependencies\n\n  useEffect(() => {\n    if (fileContent) {\n      Prism.highlightAll();\n    }\n  }, [fileContent]);\n\n  return (\n    <div className=\"file-display\">\n      <pre>\n        <code className=\"language-latex\">{fileContent}</code>\n      </pre>\n    </div>\n  );\n}\n\nexport default FileDisplay;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAO,gCAAgC;AACvC,OAAO,0BAA0B;AACjC,OAAO,mBAAmB;AAC1B,SAASC,YAAY,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,OAAO,MAAMC,EAAE,GAAG,6BAA6B;AAE/C,OAAO,MAAMC,UAAU,GAAG,uBAAuB;AAEjD,SAASC,WAAWA,CAAC;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EACvD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMc,SAAS,GAAGZ,YAAY,CAAC,CAAC;EAEhCH,SAAS,CAAC,MAAM;IACd,MAAMgB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1BX,UAAU,GAAG,sBAAsBY,kBAAkB,CACnDT,QACF,CAAC,EACH,CAAC;QACD,IAAIO,QAAQ,CAACG,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACI,IAAI,CAAC,CAAC;UAClCP,cAAc,CAACO,IAAI,CAAC;QACtB,CAAC,MAAM;UACLC,OAAO,CAACC,KAAK,CAAC,8BAA8B,CAAC;QAC/C;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDP,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACN,QAAQ,EAAEC,UAAU,CAAC,CAAC,CAAC,CAAC;;EAE5BX,SAAS,CAAC,MAAM;IACd,IAAIa,WAAW,EAAE;MACfX,KAAK,CAACsB,YAAY,CAAC,CAAC;IACtB;EACF,CAAC,EAAE,CAACX,WAAW,CAAC,CAAC;EAEjB,oBACER,OAAA;IAAKoB,SAAS,EAAC,cAAc;IAAAC,QAAA,eAC3BrB,OAAA;MAAAqB,QAAA,eACErB,OAAA;QAAMoB,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAEb;MAAW;QAAAH,QAAA,EAAAiB,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAnB,QAAA,EAAAiB,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD;EAAC;IAAAnB,QAAA,EAAAiB,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACjB,EAAA,CAxCQJ,WAAW;AAAAsB,EAAA,GAAXtB,WAAW;AA0CpB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}