{"ast":null,"code":"var _jsxFileName = \"/Users/juliogoncalves/Desktop/CVTool-Docker/CVTool-Front-End/src/components/FileDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Prism from \"prismjs\";\nimport \"prismjs/components/prism-latex\";\nimport \"prismjs/themes/prism.css\";\nimport \"./FileDisplay.css\";\nimport { getSessionId } from \"../utils/session\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DI = \"http://193.136.19.129:50761\";\nexport const LOCAL_HOST = \"http://localhost:8000\";\nexport const apiUrl = process.env.REACT_APP_API_URL;\nfunction FileDisplay({\n  fileData,\n  fileName,\n  refreshKey\n}) {\n  _s();\n  const [fileContent, setFileContent] = useState(\"\");\n  const sessionId = getSessionId();\n  useEffect(() => {\n    const fetchFileContent = async () => {\n      try {\n        const response = await fetch(DI + `/getfile/?filename=${encodeURIComponent(fileName)}`, {\n          method: 'GET',\n          headers: {\n            'Session-Id': sessionId\n          }\n        });\n        if (response.ok) {\n          const text = await response.text();\n          setFileContent(text);\n        } else {\n          console.error(\"Failed to fetch file content\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching file:\", error);\n      }\n    };\n    fetchFileContent();\n  }, [fileName, refreshKey]); // Add refreshKey to dependencies\n\n  useEffect(() => {\n    if (fileContent) {\n      Prism.highlightAll();\n    }\n  }, [fileContent]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-display\",\n    children: /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: /*#__PURE__*/_jsxDEV(\"code\", {\n        className: \"language-latex\",\n        children: fileContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(FileDisplay, \"Mii/vLcOFctNm/N2XtqeFDqywgs=\");\n_c = FileDisplay;\nexport default FileDisplay;\nvar _c;\n$RefreshReg$(_c, \"FileDisplay\");","map":{"version":3,"names":["React","useEffect","useState","Prism","getSessionId","jsxDEV","_jsxDEV","DI","LOCAL_HOST","apiUrl","process","env","REACT_APP_API_URL","FileDisplay","fileData","fileName","refreshKey","_s","fileContent","setFileContent","sessionId","fetchFileContent","response","fetch","encodeURIComponent","method","headers","ok","text","console","error","highlightAll","className","children","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/juliogoncalves/Desktop/CVTool-Docker/CVTool-Front-End/src/components/FileDisplay.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Prism from \"prismjs\";\nimport \"prismjs/components/prism-latex\";\nimport \"prismjs/themes/prism.css\";\nimport \"./FileDisplay.css\";\nimport { getSessionId } from \"../utils/session\";\n\nexport const DI = \"http://193.136.19.129:50761\"\n\nexport const LOCAL_HOST = \"http://localhost:8000\"\n\nexport const apiUrl = process.env.REACT_APP_API_URL;\n\nfunction FileDisplay({ fileData, fileName, refreshKey }) {\n  const [fileContent, setFileContent] = useState(\"\");\n\n  const sessionId = getSessionId();\n\n  useEffect(() => {\n    const fetchFileContent = async () => {\n      try {\n        const response = await fetch(\n          DI + `/getfile/?filename=${encodeURIComponent(fileName)}`,\n          {\n            method: 'GET',\n            headers: {\n              'Session-Id': sessionId\n            }\n          }\n        );\n        if (response.ok) {\n          const text = await response.text();\n          setFileContent(text);\n        } else {\n          console.error(\"Failed to fetch file content\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching file:\", error);\n      }\n    };\n\n    fetchFileContent();\n  }, [fileName, refreshKey]); // Add refreshKey to dependencies\n\n  useEffect(() => {\n    if (fileContent) {\n      Prism.highlightAll();\n    }\n  }, [fileContent]);\n\n  return (\n    <div className=\"file-display\">\n      <pre>\n        <code className=\"language-latex\">{fileContent}</code>\n      </pre>\n    </div>\n  );\n}\n\nexport default FileDisplay;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAO,gCAAgC;AACvC,OAAO,0BAA0B;AACjC,OAAO,mBAAmB;AAC1B,SAASC,YAAY,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,OAAO,MAAMC,EAAE,GAAG,6BAA6B;AAE/C,OAAO,MAAMC,UAAU,GAAG,uBAAuB;AAEjD,OAAO,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAEnD,SAASC,WAAWA,CAAC;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EACvD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMkB,SAAS,GAAGhB,YAAY,CAAC,CAAC;EAEhCH,SAAS,CAAC,MAAM;IACd,MAAMoB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1BhB,EAAE,GAAG,sBAAsBiB,kBAAkB,CAACT,QAAQ,CAAC,EAAE,EACzD;UACEU,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,YAAY,EAAEN;UAChB;QACF,CACF,CAAC;QACD,IAAIE,QAAQ,CAACK,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACM,IAAI,CAAC,CAAC;UAClCT,cAAc,CAACS,IAAI,CAAC;QACtB,CAAC,MAAM;UACLC,OAAO,CAACC,KAAK,CAAC,8BAA8B,CAAC;QAC/C;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDT,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACN,QAAQ,EAAEC,UAAU,CAAC,CAAC,CAAC,CAAC;;EAE5Bf,SAAS,CAAC,MAAM;IACd,IAAIiB,WAAW,EAAE;MACff,KAAK,CAAC4B,YAAY,CAAC,CAAC;IACtB;EACF,CAAC,EAAE,CAACb,WAAW,CAAC,CAAC;EAEjB,oBACEZ,OAAA;IAAK0B,SAAS,EAAC,cAAc;IAAAC,QAAA,eAC3B3B,OAAA;MAAA2B,QAAA,eACE3B,OAAA;QAAM0B,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAEf;MAAW;QAAAH,QAAA,EAAAmB,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAArB,QAAA,EAAAmB,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD;EAAC;IAAArB,QAAA,EAAAmB,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACnB,EAAA,CA5CQJ,WAAW;AAAAwB,EAAA,GAAXxB,WAAW;AA8CpB,eAAeA,WAAW;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}