{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import Prism from\"prismjs\";import\"prismjs/components/prism-latex\";import\"prismjs/themes/prism.css\";import\"./FileDisplay.css\";import{jsx as _jsx}from\"react/jsx-runtime\";function FileDisplay(_ref){let{fileData,fileName,refreshKey}=_ref;const[fileContent,setFileContent]=useState(\"\");useEffect(()=>{const fetchFileContent=async()=>{try{const response=await fetch(\"http://127.0.0.1:8000/getfile/?filename=\".concat(encodeURIComponent(fileName)));if(response.ok){const text=await response.text();setFileContent(text);}else{console.error(\"Failed to fetch file content\");}}catch(error){console.error(\"Error fetching file:\",error);}};fetchFileContent();},[fileName,refreshKey]);// Add refreshKey to dependencies\nuseEffect(()=>{if(fileContent){Prism.highlightAll();}},[fileContent]);return/*#__PURE__*/_jsx(\"div\",{className:\"file-display\",children:/*#__PURE__*/_jsx(\"pre\",{children:/*#__PURE__*/_jsx(\"code\",{className:\"language-latex\",children:fileContent})})});}export default FileDisplay;","map":{"version":3,"names":["React","useEffect","useState","Prism","jsx","_jsx","FileDisplay","_ref","fileData","fileName","refreshKey","fileContent","setFileContent","fetchFileContent","response","fetch","concat","encodeURIComponent","ok","text","console","error","highlightAll","className","children"],"sources":["/Users/juliogoncalves/Desktop/CVToolProject/cv-tool/src/components/FileDisplay.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Prism from \"prismjs\";\nimport \"prismjs/components/prism-latex\";\nimport \"prismjs/themes/prism.css\";\nimport \"./FileDisplay.css\";\n\nfunction FileDisplay({ fileData, fileName, refreshKey }) {\n  const [fileContent, setFileContent] = useState(\"\");\n\n  useEffect(() => {\n    const fetchFileContent = async () => {\n      try {\n        const response = await fetch(\n          `http://127.0.0.1:8000/getfile/?filename=${encodeURIComponent(\n            fileName\n          )}`\n        );\n        if (response.ok) {\n          const text = await response.text();\n          setFileContent(text);\n        } else {\n          console.error(\"Failed to fetch file content\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching file:\", error);\n      }\n    };\n\n    fetchFileContent();\n  }, [fileName, refreshKey]); // Add refreshKey to dependencies\n\n  useEffect(() => {\n    if (fileContent) {\n      Prism.highlightAll();\n    }\n  }, [fileContent]);\n\n  return (\n    <div className=\"file-display\">\n      <pre>\n        <code className=\"language-latex\">{fileContent}</code>\n      </pre>\n    </div>\n  );\n}\n\nexport default FileDisplay;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,SAAS,CAC3B,MAAO,gCAAgC,CACvC,MAAO,0BAA0B,CACjC,MAAO,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE3B,QAAS,CAAAC,WAAWA,CAAAC,IAAA,CAAqC,IAApC,CAAEC,QAAQ,CAAEC,QAAQ,CAAEC,UAAW,CAAC,CAAAH,IAAA,CACrD,KAAM,CAACI,WAAW,CAAEC,cAAc,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAElDD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAY,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,4CAAAC,MAAA,CACiBC,kBAAkB,CAC3DR,QACF,CAAC,CACH,CAAC,CACD,GAAIK,QAAQ,CAACI,EAAE,CAAE,CACf,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAL,QAAQ,CAACK,IAAI,CAAC,CAAC,CAClCP,cAAc,CAACO,IAAI,CAAC,CACtB,CAAC,IAAM,CACLC,OAAO,CAACC,KAAK,CAAC,8BAA8B,CAAC,CAC/C,CACF,CAAE,MAAOA,KAAK,CAAE,CACdD,OAAO,CAACC,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC9C,CACF,CAAC,CAEDR,gBAAgB,CAAC,CAAC,CACpB,CAAC,CAAE,CAACJ,QAAQ,CAAEC,UAAU,CAAC,CAAC,CAAE;AAE5BT,SAAS,CAAC,IAAM,CACd,GAAIU,WAAW,CAAE,CACfR,KAAK,CAACmB,YAAY,CAAC,CAAC,CACtB,CACF,CAAC,CAAE,CAACX,WAAW,CAAC,CAAC,CAEjB,mBACEN,IAAA,QAAKkB,SAAS,CAAC,cAAc,CAAAC,QAAA,cAC3BnB,IAAA,QAAAmB,QAAA,cACEnB,IAAA,SAAMkB,SAAS,CAAC,gBAAgB,CAAAC,QAAA,CAAEb,WAAW,CAAO,CAAC,CAClD,CAAC,CACH,CAAC,CAEV,CAEA,cAAe,CAAAL,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}