{"ast":null,"code":"var _jsxFileName = \"/Users/juliogoncalves/Desktop/Mestrado/EL/EG/CVToolProject/cv-tool/src/components/UploadComponent.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadComponent({\n  onFileUpload\n}) {\n  const handleFileChange = async event => {\n    const file = event.target.files[0];\n    if (file && file.type === 'text/plain') {\n      const formData = new FormData();\n      formData.append('file', file);\n      const response = await fetch('/uploadfile/', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        const data = await response.json();\n        onFileUpload(data.processed_file_path);\n      } else {\n        console.error('File upload failed');\n      }\n    } else {\n      alert('Only .txt files are allowed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"upload-label\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".txt\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), \"Upload File\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_c = UploadComponent;\nexport default UploadComponent;\nvar _c;\n$RefreshReg$(_c, \"UploadComponent\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","UploadComponent","onFileUpload","handleFileChange","event","file","target","files","type","formData","FormData","append","response","fetch","method","body","ok","data","json","processed_file_path","console","error","alert","className","children","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/juliogoncalves/Desktop/Mestrado/EL/EG/CVToolProject/cv-tool/src/components/UploadComponent.js"],"sourcesContent":["import React from 'react';\n\nfunction UploadComponent({ onFileUpload }) {\n  const handleFileChange = async (event) => {\n    const file = event.target.files[0];\n    if (file && file.type === 'text/plain') {\n      const formData = new FormData();\n      formData.append('file', file);\n\n      const response = await fetch('/uploadfile/', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        onFileUpload(data.processed_file_path);\n      } else {\n        console.error('File upload failed');\n      }\n    } else {\n      alert('Only .txt files are allowed');\n    }\n  };\n\n  return (\n    <div className=\"upload-container\">\n      <label className=\"upload-label\">\n        <input type=\"file\" accept=\".txt\" onChange={handleFileChange} />\n        Upload File\n      </label>\n    </div>\n  );\n}\n\nexport default UploadComponent;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,eAAeA,CAAC;EAAEC;AAAa,CAAC,EAAE;EACzC,MAAMC,gBAAgB,GAAG,MAAOC,KAAK,IAAK;IACxC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAIF,IAAI,IAAIA,IAAI,CAACG,IAAI,KAAK,YAAY,EAAE;MACtC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEN,IAAI,CAAC;MAE7B,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,cAAc,EAAE;QAC3CC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACR,CAAC,CAAC;MAEF,IAAIG,QAAQ,CAACI,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClChB,YAAY,CAACe,IAAI,CAACE,mBAAmB,CAAC;MACxC,CAAC,MAAM;QACLC,OAAO,CAACC,KAAK,CAAC,oBAAoB,CAAC;MACrC;IACF,CAAC,MAAM;MACLC,KAAK,CAAC,6BAA6B,CAAC;IACtC;EACF,CAAC;EAED,oBACEtB,OAAA;IAAKuB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eAC/BxB,OAAA;MAAOuB,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC7BxB,OAAA;QAAOQ,IAAI,EAAC,MAAM;QAACiB,MAAM,EAAC,MAAM;QAACC,QAAQ,EAAEvB;MAAiB;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEjE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACC,EAAA,GA/BQ9B,eAAe;AAiCxB,eAAeA,eAAe;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}