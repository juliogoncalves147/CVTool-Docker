{"ast":null,"code":"import React,{useState}from\"react\";import TextField from\"@mui/material/TextField\";import SendIcon from\"@mui/icons-material/Send\";import Button from\"@mui/material/Button\";import{List,ListItem,ListItemText,Typography,Grid}from\"@mui/material\";import ListItemIcon from\"@mui/material/ListItemIcon\";import HistoryIcon from\"@mui/icons-material/History\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function QueryComponent(_ref){let{onQuerySubmit,queryHistory,fileName}=_ref;const[query,setQuery]=useState(\"\");const[history,setHistory]=useState(queryHistory);// State for query history\nconst[executingQuery,setExecutingQuery]=useState(null);// State for current executing query\nconst handleSubmit=async event=>{event.preventDefault();const formData=new FormData();formData.append(\"str_query\",query);formData.append(\"filename\",fileName);const timestamp=new Date().toLocaleTimeString([],{hour:\"numeric\",minute:\"numeric\",second:\"numeric\"});const newExecutingQuery={status:\"EXECUTING\",query,timestamp};setExecutingQuery(newExecutingQuery);try{const response=await fetch(\"http://127.0.0.1:8000/query/\",{method:\"POST\",body:formData});if(!response.ok){throw new Error(\"Query submission failed\");}const data=await response.json();const status=data.status===\"OK\"?\"SUCCESS\":\"ERROR\";const newQuery={status,query:data.query,timestamp};onQuerySubmit(data.query);setHistory([newQuery,...history]);// Prepend newQuery to history array\nsetQuery(\"\");}catch(error){console.error(\"Error submitting query:\",error);const newQuery={status:\"ERROR\",query:\"No file selected, please upload a valid one!\",timestamp};setHistory([newQuery,...history]);// Prepend newQuery to history array\n}finally{setExecutingQuery(null);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"query-container\",children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(TextField,{id:\"standard-basic\",label:\"Write a new Query\",variant:\"standard\",value:query,onChange:e=>setQuery(e.target.value)}),/*#__PURE__*/_jsx(Button,{style:{marginTop:\"1%\"},variant:\"contained\",onClick:handleSubmit,type:\"submit\",children:\"Execute\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"query-history\",children:[/*#__PURE__*/_jsxs(Grid,{container:true,alignItems:\"center\",spacing:1,children:[/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Query History\"})}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(HistoryIcon,{fontSize:\"medium\"})})]}),/*#__PURE__*/_jsxs(List,{children:[executingQuery&&/*#__PURE__*/_jsxs(ListItem,{className:\"executing\",children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(SendIcon,{fontSize:\"small\"})}),/*#__PURE__*/_jsx(ListItemText,{primary:/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[\"Executing query, it can take a while... -\",\" \",executingQuery.timestamp]})})]},\"executing\"),history.map((item,index)=>/*#__PURE__*/_jsxs(ListItem,{className:item.status===\"ERROR\"?\"error\":\"success\",children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(SendIcon,{fontSize:\"small\"})}),/*#__PURE__*/_jsx(ListItemText,{primary:/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[item.query,\" - \",item.timestamp]})})]},index))]})]})]});}export default QueryComponent;","map":{"version":3,"names":["React","useState","TextField","SendIcon","Button","List","ListItem","ListItemText","Typography","Grid","ListItemIcon","HistoryIcon","jsx","_jsx","jsxs","_jsxs","QueryComponent","_ref","onQuerySubmit","queryHistory","fileName","query","setQuery","history","setHistory","executingQuery","setExecutingQuery","handleSubmit","event","preventDefault","formData","FormData","append","timestamp","Date","toLocaleTimeString","hour","minute","second","newExecutingQuery","status","response","fetch","method","body","ok","Error","data","json","newQuery","error","console","className","children","onSubmit","id","label","variant","value","onChange","e","target","style","marginTop","onClick","type","container","alignItems","spacing","item","gutterBottom","fontSize","primary","map","index"],"sources":["/Users/juliogoncalves/Desktop/CVToolProject/cv-tool/src/components/QueryComponent.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport Button from \"@mui/material/Button\";\nimport { List, ListItem, ListItemText, Typography, Grid } from \"@mui/material\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport HistoryIcon from \"@mui/icons-material/History\";\n\nfunction QueryComponent({ onQuerySubmit, queryHistory, fileName }) {\n  const [query, setQuery] = useState(\"\");\n  const [history, setHistory] = useState(queryHistory); // State for query history\n  const [executingQuery, setExecutingQuery] = useState(null); // State for current executing query\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const formData = new FormData();\n    formData.append(\"str_query\", query);\n    formData.append(\"filename\", fileName);\n\n    const timestamp = new Date().toLocaleTimeString([], {\n      hour: \"numeric\",\n      minute: \"numeric\",\n      second: \"numeric\",\n    });\n\n    const newExecutingQuery = { status: \"EXECUTING\", query, timestamp };\n    setExecutingQuery(newExecutingQuery);\n\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/query/\", {\n        method: \"POST\",\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Query submission failed\");\n      }\n\n      const data = await response.json();\n      const status = data.status === \"OK\" ? \"SUCCESS\" : \"ERROR\";\n      const newQuery = { status, query: data.query, timestamp };\n      onQuerySubmit(data.query);\n      setHistory([newQuery, ...history]); // Prepend newQuery to history array\n      setQuery(\"\");\n    } catch (error) {\n      console.error(\"Error submitting query:\", error);\n      const newQuery = {\n        status: \"ERROR\",\n        query: \"No file selected, please upload a valid one!\",\n        timestamp,\n      };\n      setHistory([newQuery, ...history]); // Prepend newQuery to history array\n    } finally {\n      setExecutingQuery(null);\n    }\n  };\n\n  return (\n    <div className=\"query-container\">\n      <form onSubmit={handleSubmit}>\n        <TextField\n          id=\"standard-basic\"\n          label=\"Write a new Query\"\n          variant=\"standard\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n        />\n        <Button\n          style={{ marginTop: \"1%\" }}\n          variant=\"contained\"\n          onClick={handleSubmit}\n          type=\"submit\"\n        >\n          Execute\n        </Button>\n      </form>\n      <div className=\"query-history\">\n        <Grid container alignItems=\"center\" spacing={1}>\n          <Grid item>\n            <Typography variant=\"h6\" gutterBottom>\n              Query History\n            </Typography>\n          </Grid>\n          <Grid item>\n            <HistoryIcon fontSize=\"medium\" />\n          </Grid>\n        </Grid>\n        <List>\n          {executingQuery && (\n            <ListItem key=\"executing\" className=\"executing\">\n              <ListItemIcon>\n                <SendIcon fontSize=\"small\" />\n              </ListItemIcon>\n              <ListItemText\n                primary={\n                  <Typography variant=\"body2\">\n                    Executing query, it can take a while... -{\" \"}\n                    {executingQuery.timestamp}\n                  </Typography>\n                }\n              />\n            </ListItem>\n          )}\n          {history.map((item, index) => (\n            <ListItem\n              key={index}\n              className={item.status === \"ERROR\" ? \"error\" : \"success\"}\n            >\n              <ListItemIcon>\n                <SendIcon fontSize=\"small\" />\n              </ListItemIcon>\n              <ListItemText\n                primary={\n                  <Typography variant=\"body2\">\n                    {item.query} - {item.timestamp}\n                  </Typography>\n                }\n              />\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    </div>\n  );\n}\n\nexport default QueryComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}